package se.team2.views.charts;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.util.concurrent.CountDownLatch;

import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.block.BlockBorder;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.title.TextTitle;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

import se.team2.controllers.ServerRequestHandler;

public class LineChartEx extends JFrame {
	private ServerRequestHandler srh;
	private String field;
	
    public LineChartEx(ServerRequestHandler srh,String field) {
    	this.srh = srh;
    	this.field = field;
        initUI();
    }

    private void initUI() {

        XYDataset dataset = createDataset();
        JFreeChart chart = createChart(dataset);
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));
        chartPanel.setBackground(Color.white);
        add(chartPanel);

        pack();
        setTitle("30 Trading Days");
        setLocationRelativeTo(null);
    }

    private XYDataset createDataset() {
    	try {
		  	ServerRequestHandler srh_rfem = new ServerRequestHandler();
		  	ServerRequestHandler srh_aapl = new ServerRequestHandler();
		  	ServerRequestHandler srh_googl = new ServerRequestHandler();
		  	
		  	CountDownLatch latch = new CountDownLatch(3);
		  	
		  	Thread thread_rfem = new Thread() {
		  		@Override
		  		public void run() {
		  			try {
		  			    srh_rfem.setParam("symbol", "rfem");
						srh_rfem.makeRequest(ServerRequestHandler.DAYS_30_REQUEST);
						System.out.println("rfem done");
					} catch (Exception e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		  			latch.countDown();
		  		}
		  	};
		  	Thread thread_aapl = new Thread() {
		  		@Override
		  		public void run() {
		  			try {
		  				srh_aapl.setParam("symbol", "aapl");
						srh_aapl.makeRequest(ServerRequestHandler.DAYS_30_REQUEST);
						System.out.println("appl done");
					} catch (Exception e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		  			latch.countDown();
		  		}
		  	};
		  	Thread thread_googl = new Thread() {
		  		@Override
		  		public void run() {
		  			try {
		  				srh_googl.setParam("symbol", "googl");
						srh_googl.makeRequest(ServerRequestHandler.DAYS_30_REQUEST);

						System.out.println("rfem done");
					} catch (Exception e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		  			latch.countDown();
		  		}
		  	};
		  	
		  	thread_rfem.start();
		  	thread_aapl.start();
		  	thread_googl.start();
		  	
		  	while(latch.getCount() > 0) {	}
		  	
            XYSeries series = new XYSeries("RFEM");
           	int num_records = srh_rfem.size();
            for(int x = 0; x < num_records; x++) {
            	series.add((double)x,srh_rfem.getDouble(field, x));
            }
            
            XYSeries series2 = new XYSeries("AAPL");
           	num_records = srh_aapl.size();
            for(int x = 0; x < num_records; x++) {
            	series2.add((double)x,srh_aapl.getDouble(field, x));
            }
            
            XYSeries series3 = new XYSeries("GOOGL");
           	num_records = srh_googl.size();
            for(int x = 0; x < num_records; x++) {
            	series3.add((double)x,srh_googl.getDouble(field, x));
            }
            

            XYSeriesCollection dataset = new XYSeriesCollection();
            dataset.addSeries(series);
            dataset.addSeries(series2);
            dataset.addSeries(series3);

            return dataset;
    	}catch(Exception e) {
    		e.printStackTrace();
    		return null;
    	}

    }

    private JFreeChart createChart(XYDataset dataset) {

        JFreeChart chart = ChartFactory.createXYLineChart(
                "30 Trading Days", 
                "Day", 
                field, 
                dataset, 
                PlotOrientation.VERTICAL,
                true, 
                true, 
                false 
        );

        XYPlot plot = chart.getXYPlot();

        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
        renderer.setSeriesPaint(0, Color.RED);
        renderer.setSeriesPaint(1, Color.BLUE);
        renderer.setSeriesPaint(2, Color.green);
        renderer.setSeriesStroke(0, new BasicStroke(2.0f));
        renderer.setSeriesStroke(1, new BasicStroke(2.0f));
        renderer.setSeriesStroke(2, new BasicStroke(2.0f));

        plot.setRenderer(renderer);
        plot.setBackgroundPaint(Color.white);

        plot.setRangeGridlinesVisible(true);
        plot.setRangeGridlinePaint(Color.BLACK);

        plot.setDomainGridlinesVisible(true);
        plot.setDomainGridlinePaint(Color.BLACK);

        chart.getLegend().setFrame(BlockBorder.NONE);

        chart.setTitle(new TextTitle("30 Trading Days",
                        new Font("Serif", java.awt.Font.BOLD, 18)
                )
        );

        return chart;

    }
}