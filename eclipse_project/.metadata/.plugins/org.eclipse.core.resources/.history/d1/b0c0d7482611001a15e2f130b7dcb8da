package se.team2.views;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.block.BlockBorder;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.title.TextTitle;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

import se.team2.controllers.ServerRequestHandler;

public class LineChartEx extends JFrame {
	private ServerRequestHandler srh;

    public LineChartEx(ServerRequestHandler srh) {
    	this.srh = srh;
        initUI();
    }

    private void initUI() {

        XYDataset dataset = createDataset();
        JFreeChart chart = createChart(dataset);
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));
        chartPanel.setBackground(Color.white);
        add(chartPanel);

        pack();
        setTitle("30 Trading Days");
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    private XYDataset createDataset() {
    	try {
        	
        	srh.setParam("symbol", "rfem");
        	srh.makeRequest(ServerRequestHandler.DAYS_30_REQUEST);

            XYSeries series = new XYSeries("RFEM");
           	int num_records = srh.size();
            for(int x = 0; x < num_records; x++) {
            	series.add((double)x,srh.getDouble("close", x));
            }
            
        	srh.setParam("symbol", "aapl");
        	srh.makeRequest(ServerRequestHandler.DAYS_30_REQUEST);
            
            XYSeries series2 = new XYSeries("AAPL");
           	num_records = srh.size();
            for(int x = 0; x < num_records; x++) {
            	series.add((double)x,srh.getDouble("close", x));
            }
            
        	srh.setParam("symbol", "googl");
        	srh.makeRequest(ServerRequestHandler.DAYS_30_REQUEST);
            
            XYSeries series3 = new XYSeries("GOOGL");
           	num_records = srh.size();
            for(int x = 0; x < num_records; x++) {
            	series.add((double)x,srh.getDouble("close", x));
            }
            

            XYSeriesCollection dataset = new XYSeriesCollection();
            dataset.addSeries(series);
            dataset.addSeries(series2);
            dataset.addSeries(series3);

            return dataset;
    	}catch(Exception e) {
    		e.printStackTrace();
    		return null;
    	}

    }

    private JFreeChart createChart(XYDataset dataset) {

        JFreeChart chart = ChartFactory.createXYLineChart(
                "30 Trading Days", 
                "Date", 
                "Close", 
                dataset, 
                PlotOrientation.VERTICAL,
                true, 
                true, 
                false 
        );

        XYPlot plot = chart.getXYPlot();

        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
        renderer.setSeriesPaint(0, Color.RED);
        renderer.setSeriesPaint(1, Color.BLUE);
        renderer.setSeriesPaint(2, Color.green);
        renderer.setSeriesStroke(0, new BasicStroke(2.0f));
        renderer.setSeriesStroke(1, new BasicStroke(2.0f));
        renderer.setSeriesStroke(2, new BasicStroke(2.0f));

        plot.setRenderer(renderer);
        plot.setBackgroundPaint(Color.white);

        plot.setRangeGridlinesVisible(true);
        plot.setRangeGridlinePaint(Color.BLACK);

        plot.setDomainGridlinesVisible(true);
        plot.setDomainGridlinePaint(Color.BLACK);

        chart.getLegend().setFrame(BlockBorder.NONE);

        chart.setTitle(new TextTitle("30 Trading Days",
                        new Font("Serif", java.awt.Font.BOLD, 18)
                )
        );

        return chart;

    }

    public static void main(String[] args) {
    	ServerRequestHandler srh = new ServerRequestHandler();
        SwingUtilities.invokeLater(() -> {
            LineChartEx ex = new LineChartEx(srh);
            ex.setVisible(true);
        });
    }
}