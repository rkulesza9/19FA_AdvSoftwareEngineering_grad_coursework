package se.team2.test.request_speed;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.http.HttpClient;

import com.google.gson.JsonElement;
import com.google.gson.JsonParser;

import se.team2.controllers.ServerRequestHandler;

public class ServerRequestHandler2 extends ServerRequestHandler {

	public ServerRequestHandler2() throws Exception{
		super();
	}
	
	private String mode(int rtype) {
		switch(rtype) {
		case ServerRequestHandler.DAYS_30_REQUEST:
			return "30dayreport";
		case ServerRequestHandler.AGGREGATE_REQUEST:
			return "aggregate";
		case ServerRequestHandler.COMPANY_INFO:
			return "companyinfo";
		case ServerRequestHandler.POP_SEARCH:
			return "popsearch";
		default:
			return "companyinfo";
		}
	}
	
	private String get_range(int rtype) {
		switch(rtype) {
		case AGGREGATE_REQUEST:
			return String.format("&date_start=%s&date_end=%s",
					getParam("date_start"), getParam("date_end"));
		default:
			return "";
		}
	}
	
	private HttpURLConnection connect(int REQUEST_TYPE) throws Exception{
		String website = String.format("http://fproject-se.ddns.net?mode=%s&symbol=%s%s", 
				mode(REQUEST_TYPE), getParam("symbol"), get_range(REQUEST_TYPE));
		
		URL url = new URL(website);
		HttpURLConnection con = (HttpURLConnection) url.openConnection();
		
        con.setUseCaches(false);
        con.setRequestProperty("Content-Type", "application/json");
        con.setRequestProperty("Accept", "text/plain");
        con.setRequestProperty("Accept", "application/json");
        con.setDoOutput(true);
        con.setDoInput(true);
//        con.setRequestProperty("Content-Length", "1000");
//        con.setRequestProperty("Connection", "close");
//        System.setProperty("http.keepAlive", "false"); 
        con.connect();
		
		
		return con;
	}
	
	@Override
	public void makeRequest(int REQUEST_TYPE) throws Exception{
		
		HttpURLConnection conn = connect(REQUEST_TYPE);
		
		BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
		String inputLine;
		StringBuffer content = new StringBuffer();
		
		while((inputLine = in.readLine()) != null) content.append(inputLine);
		in.close();
		String jsonString = content.toString();
		
		//Parse to Json element
		JsonParser parser = new JsonParser();
		JsonElement element = parser.parse(jsonString);

		//Get as Json Array
		this.jsonArray = element.getAsJsonArray();
	}

}
